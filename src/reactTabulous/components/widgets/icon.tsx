import React from 'react';

import classnames from '../../helpers/classnames';

const icons = {
  add: <path d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z" />,
  bar: <path d="M11 19V5h2v14z" />,
  close: (
    <path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z" />
  ),
  column: (
    <>
      <path d="M20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2M8 18H4V6h4zm6 0h-4V6h4zm6 0h-4V6h4z" />
    </>
  ),
  compact: <path d="M4 15h16v-2H4v2zm0 4h16v-2H4v2zm0-8h16V9H4v2zm0-6v2h16V5H4z" />,
  comfortable: <path d="M4 18h17v-6H4v6zM4 5v6h17V5H4z" />,
  delete: (
    <path d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z" />
  ),
  density: (
    <path d="M19.0284 3C19.533 2.99984 20.0189 3.19041 20.3889 3.5335C20.7589 3.87659 20.9855 4.34684 21.0234 4.85L21.0284 5V19C21.0285 19.5046 20.838 19.9906 20.4949 20.3605C20.1518 20.7305 19.6815 20.9572 19.1784 20.995L19.0284 21H5.02838C4.5238 21.0002 4.03781 20.8096 3.66783 20.4665C3.29785 20.1234 3.07122 19.6532 3.03338 19.15L3.02838 19V5C3.02822 4.49542 3.21879 4.00943 3.56188 3.63945C3.90497 3.26947 4.37523 3.04284 4.87838 3.005L5.02838 3H19.0284ZM11.0284 15H5.02838V19H11.0284V15ZM19.0284 15H13.0284V19H19.0284V15ZM19.0284 10H13.0284V13H19.0284V10ZM11.0284 10H5.02838V13H11.0284V10ZM19.0284 5H13.0284V8H19.0284V5ZM11.0284 5H5.02838V8H11.0284V5Z" />
  ),
  download: (
    <>
      <path d="M17.913 15.4029C18.2222 15.0843 18.7187 15.057 19.0595 15.3267L19.1249 15.3843L19.3232 15.5552C19.4124 15.628 19.5252 15.7173 19.662 15.8248C19.916 16.0242 20.2268 16.2666 20.5224 16.5171C20.8143 16.7645 21.121 17.0446 21.3613 17.3267C21.4817 17.4682 21.6028 17.6307 21.6972 17.8072C21.788 17.9768 21.8857 18.217 21.8857 18.4996C21.8857 18.7821 21.788 19.0223 21.6972 19.192C21.6028 19.3684 21.4817 19.531 21.3613 19.6724C21.121 19.9545 20.8143 20.2346 20.5224 20.482C20.2268 20.7326 19.916 20.9749 19.662 21.1744C19.3887 21.3891 19.2115 21.5308 19.1249 21.6148C18.7852 21.9443 18.2426 21.9359 17.913 21.5962C17.5835 21.2565 17.5919 20.7139 17.9316 20.3843C18.098 20.2229 18.3597 20.0164 18.6025 19.8257C18.7927 19.6764 18.9928 19.5181 19.1904 19.357H13.0283C12.5549 19.357 12.1708 18.973 12.1708 18.4996C12.1708 18.0262 12.5549 17.6421 13.0283 17.6421H19.1904C18.9928 17.481 18.7927 17.3228 18.6025 17.1734C18.4204 17.0304 18.2275 16.8787 18.0722 16.7437L17.9316 16.6148L17.872 16.5504C17.5923 16.2179 17.6041 15.7214 17.913 15.4029ZM19.1708 12.9996V7.81793C19.1708 6.96009 19.1709 6.35733 19.1396 5.88433C19.1088 5.4193 19.0505 5.13874 18.9628 4.91851C18.6491 4.12716 17.9997 3.4743 17.1503 3.12555L16.9785 3.06012C16.4332 2.86874 15.7169 2.85699 13.8466 2.85699C10.8255 2.85699 9.41533 2.86746 8.35834 3.18219L8.15131 3.24957C6.46346 3.84224 5.12793 5.04603 4.42572 6.56207L4.29388 6.86969C4.10599 7.34374 3.99814 7.91023 3.94232 8.7564C3.88599 9.61034 3.88568 10.6886 3.88568 12.1812V14.7261C3.88568 16.2816 3.88661 17.3737 3.98529 18.2125C4.08163 19.0309 4.2612 19.5037 4.54681 19.8629L4.69916 20.0406C4.80408 20.1546 4.91692 20.2611 5.03705 20.3589L5.22357 20.4996L5.22553 20.5005L5.37982 20.6011C5.75741 20.8226 6.25659 20.9664 7.03412 21.0474C7.93626 21.1415 9.10665 21.1421 10.7548 21.1421H11.0283L11.1161 21.147C11.5482 21.191 11.8857 21.5559 11.8857 21.9996C11.8857 22.4433 11.5482 22.8081 11.1161 22.8521L11.0283 22.857H10.7548C9.14344 22.857 7.86807 22.8579 6.85638 22.7525C5.83104 22.6456 4.97368 22.4211 4.23724 21.9019C3.9461 21.6975 3.67783 21.462 3.43744 21.2007L3.20502 20.9302C2.64289 20.2235 2.3988 19.3958 2.28314 18.4136C2.16988 17.4514 2.17084 16.2404 2.17084 14.7261V12.1812C2.17084 10.7114 2.1705 9.56744 2.23138 8.6441C2.2928 7.71309 2.41917 6.94666 2.70013 6.23785L2.87103 5.84137C3.77637 3.88651 5.47954 2.37004 7.58295 1.63141L7.85541 1.54351C9.23691 1.13156 10.9617 1.14215 13.8466 1.14215C15.5717 1.14215 16.6553 1.13042 17.5458 1.44293L17.8017 1.53961C19.0588 2.05606 20.0611 3.03839 20.5556 4.28473L20.6191 4.4566C20.7557 4.86147 20.8177 5.29036 20.8495 5.77203C20.8855 6.3147 20.8857 6.98299 20.8857 7.81793V12.9996C20.8857 13.473 20.5016 13.857 20.0283 13.857C19.5549 13.857 19.1708 13.473 19.1708 12.9996Z" />
      <path d="M2.17084 11.9996C2.17084 10.8883 2.61257 9.82248 3.39838 9.03668C4.18418 8.25088 5.24997 7.80914 6.36127 7.80914C6.5497 7.80914 6.74186 7.81758 6.91888 7.82574C7.10159 7.83416 7.26837 7.84284 7.43451 7.84625C7.77157 7.85315 8.03208 7.83613 8.23627 7.7818L8.33685 7.74762C8.43502 7.70687 8.52491 7.6475 8.60052 7.57183C8.70124 7.47103 8.77357 7.3452 8.81049 7.20758C8.86501 7.00325 8.88185 6.74242 8.87494 6.40484C8.87153 6.2387 8.86285 6.07192 8.85443 5.88922L8.83783 5.3316C8.83816 4.22073 9.27988 3.15518 10.0654 2.36969C10.8511 1.58415 11.9172 1.14215 13.0283 1.14215C13.5016 1.14215 13.8857 1.52618 13.8857 1.99957C13.8857 2.47296 13.5016 2.85699 13.0283 2.85699C12.3719 2.85699 11.7425 3.11759 11.2783 3.5816C10.814 4.0457 10.5529 4.67517 10.5527 5.3316L10.5673 5.81012C10.5752 5.98164 10.5848 6.17594 10.5888 6.36969C10.5966 6.75248 10.585 7.2084 10.4667 7.65094L10.4658 7.65191C10.351 8.07949 10.1263 8.46953 9.81342 8.78277C9.50028 9.09618 9.10939 9.32194 8.68158 9.43707L8.6806 9.43805C8.23826 9.55629 7.78302 9.56793 7.40033 9.56012C7.20642 9.55615 7.01145 9.54654 6.83978 9.53863C6.66209 9.53044 6.50583 9.52398 6.36127 9.52398C5.70463 9.52398 5.0746 9.78428 4.61029 10.2486C4.14598 10.7129 3.88568 11.3429 3.88568 11.9996C3.88568 12.473 3.50165 12.857 3.02826 12.857C2.55487 12.857 2.17084 12.473 2.17084 11.9996Z" />
    </>
  ),
  filter: (
    <path d="M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61z" />
  ),
  'filter-list': (
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M3.0282 4.5C3.0282 4.10218 3.18623 3.72064 3.46754 3.43934C3.74884 3.15804 4.13037 3 4.5282 3H19.5282C19.926 3 20.3076 3.15804 20.5889 3.43934C20.8702 3.72064 21.0282 4.10218 21.0282 4.5V6.586C21.0281 7.11639 20.8173 7.62501 20.4422 8L15.0282 13.414V20.838C15.0282 21.0255 14.9803 21.2099 14.889 21.3737C14.7977 21.5375 14.6661 21.6753 14.5065 21.7739C14.347 21.8724 14.165 21.9286 13.9776 21.9371C13.7903 21.9455 13.6039 21.9059 13.4362 21.822L9.7192 19.964C9.51157 19.8602 9.33695 19.7006 9.2149 19.5031C9.09285 19.3057 9.02821 19.0781 9.0282 18.846V13.414L3.6142 8C3.2391 7.62501 3.02831 7.11639 3.0282 6.586V4.5ZM5.0282 5V6.586L10.5882 12.146C10.7276 12.2853 10.8383 12.4507 10.9138 12.6327C10.9893 12.8148 11.0282 13.0099 11.0282 13.207V18.382L13.0282 19.382V13.207C13.0282 12.809 13.1862 12.427 13.4682 12.147L19.0282 6.585V5H5.0282Z"
    />
  ),
  sort: (
    <g>
      <path d="M15.2266 10.4011L11.6989 6.31047C11.5979 6.19338 11.4035 6.19338 11.3014 6.31047L7.77369 10.4011C7.64263 10.5536 7.7608 10.7771 7.97242 10.7771H15.0279C15.2395 10.7771 15.3577 10.5536 15.2266 10.4011Z" />
      <path d="M15.0279 14.2227H7.97242C7.7608 14.2227 7.64263 14.4461 7.77369 14.5986L11.3014 18.6893C11.4024 18.8063 11.5968 18.8063 11.6989 18.6893L15.2266 14.5986C15.3577 14.4461 15.2395 14.2227 15.0279 14.2227Z" />
    </g>
  ),
  'sort-up-fill': <path d="M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z" />,
  'sort-down-fill': <path d="M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z" />,
  'sort-down': (
    <path d="M15.0279 14.2227H7.97242C7.7608 14.2227 7.64263 14.4461 7.77369 14.5986L11.3014 18.6893C11.4024 18.8063 11.5968 18.8063 11.6989 18.6893L15.2266 14.5986C15.3577 14.4461 15.2395 14.2227 15.0279 14.2227Z" />
  ),
  'sort-up': (
    <path d="M15.0279 10.7773H7.97242C7.7608 10.7773 7.64263 10.5539 7.77369 10.4014L11.3014 6.31074C11.4024 6.19365 11.5968 6.19365 11.6989 6.31074L15.2266 10.4014C15.3577 10.5539 15.2395 10.7773 15.0279 10.7773Z" />
  ),
  'kebab-menu': (
    <path d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z" />
  ),
  'arrow-left': <path d="M15.41 16.59 10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z" />,
  'double-arrow-left': (
    <g>
      <path d="M17.59 18 19 16.59 14.42 12 19 7.41 17.59 6l-6 6z"></path>
      <path d="m11 18 1.41-1.41L7.83 12l4.58-4.59L11 6l-6 6z"></path>
    </g>
  ),
  'arrow-right': <path d="M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z" />,
  'double-arrow-right': (
    <g>
      <path d="M6.41 6 5 7.41 9.58 12 5 16.59 6.41 18l6-6z"></path>
      <path d="m13 6-1.41 1.41L16.17 12l-4.58 4.59L13 18l6-6z"></path>
    </g>
  ),
  'eye-off': (
    <path d="M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z" />
  ),
  pin: (
    <path d="M16 9V4h1c.55 0 1-.45 1-1s-.45-1-1-1H7c-.55 0-1 .45-1 1s.45 1 1 1h1v5c0 1.66-1.34 3-3 3v2h5.97v7l1 1 1-1v-7H19v-2c-1.66 0-3-1.34-3-3z" />
  ),
  standard: <path d="M21,8H3V4h18V8z M21,10H3v4h18V10z M21,16H3v4h18V16z" />,
  'keyboard-back': <path d="M21 11H6.83l3.58-3.59L9 6l-6 6 6 6 1.41-1.41L6.83 13H21z" />,
  'keyboard-forward': <path d="M3 13h14.17l-3.58 3.59L15 18l6-6-6-6-1.41 1.41L17.17 11H3z" />,
  search: (
    <path d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z" />
  ),
  info: (
    <path d="M11 7h2v2h-2zm0 4h2v6h-2zm1-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8" />
  )
};

export type Icons = keyof typeof icons;

interface IconProps extends React.HTMLAttributes<HTMLOrSVGElement> {
  name: Icons;
  size?: number;
  fill?: string;
  title?: string;
  asButton?: boolean;
  className?: string;
}

export const Icon: React.FC<IconProps> = ({
  name,
  size = 24,
  fill = 'currentColor',
  asButton = false,
  className = '',
  title,
  ...rest
}) => {
  return (
    <svg
      role="img"
      data-icon={name}
      className={classnames(className, { cursorOverHover: asButton })}
      width={size}
      height={size}
      viewBox="0 0 24 24"
      fill={fill}
      xmlns="http://www.w3.org/2000/svg"
      {...rest}
    >
      {icons[name]}
      {title != null && <title>{title}</title>}
    </svg>
  );
};
